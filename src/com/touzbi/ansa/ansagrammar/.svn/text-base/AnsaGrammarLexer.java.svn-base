// Generated from AnsaGrammar.g4 by ANTLR 4.1
package com.touzbi.ansa.ansagrammar;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class AnsaGrammarLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__5=1, T__4=2, T__3=3, T__2=4, T__1=5, T__0=6, LINE_COMMENT=7, HTTP_REQUEST=8, 
		SYSOUT=9, INPUT=10, PARAM_ID=11, PARAM_DELIMITER=12, QUOTED_STRING=13, 
		SINGLE_QUOTE=14, WS=15;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "')'", "','", "'['", "'('", "';'", "LINE_COMMENT", "'httprequest'", 
		"'sysout'", "'setinput'", "PARAM_ID", "':'", "QUOTED_STRING", "'''", "WS"
	};
	public static final String[] ruleNames = {
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "LINE_COMMENT", "HTTP_REQUEST", 
		"SYSOUT", "INPUT", "PARAM_ID", "PARAM_DELIMITER", "QUOTED_STRING", "STRING", 
		"SINGLE_QUOTE", "LETTER", "WS"
	};


	public AnsaGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AnsaGrammar.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 6: LINE_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 16: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void LINE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\21s\b\1\4\2\t\2\4"+
		"\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t"+
		"\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\7\b\66"+
		"\n\b\f\b\16\b9\13\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3"+
		"\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13"+
		"\3\13\3\13\3\f\6\fZ\n\f\r\f\16\f[\3\r\3\r\3\16\3\16\3\16\3\16\3\17\6\17"+
		"e\n\17\r\17\16\17f\3\20\3\20\3\21\3\21\3\22\6\22n\n\22\r\22\16\22o\3\22"+
		"\3\22\2\23\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\2\21\n\1\23\13\1"+
		"\25\f\1\27\r\1\31\16\1\33\17\1\35\2\1\37\20\1!\2\1#\21\3\3\2\5\4\2\f\f"+
		"\17\17\4\2C\\c|\5\2\13\f\17\17\"\"t\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2"+
		"\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23"+
		"\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\37\3\2"+
		"\2\2\2#\3\2\2\2\3%\3\2\2\2\5\'\3\2\2\2\7)\3\2\2\2\t+\3\2\2\2\13-\3\2\2"+
		"\2\r/\3\2\2\2\17\61\3\2\2\2\21<\3\2\2\2\23H\3\2\2\2\25O\3\2\2\2\27Y\3"+
		"\2\2\2\31]\3\2\2\2\33_\3\2\2\2\35d\3\2\2\2\37h\3\2\2\2!j\3\2\2\2#m\3\2"+
		"\2\2%&\7_\2\2&\4\3\2\2\2\'(\7+\2\2(\6\3\2\2\2)*\7.\2\2*\b\3\2\2\2+,\7"+
		"]\2\2,\n\3\2\2\2-.\7*\2\2.\f\3\2\2\2/\60\7=\2\2\60\16\3\2\2\2\61\62\7"+
		"%\2\2\62\63\7%\2\2\63\67\3\2\2\2\64\66\n\2\2\2\65\64\3\2\2\2\669\3\2\2"+
		"\2\67\65\3\2\2\2\678\3\2\2\28:\3\2\2\29\67\3\2\2\2:;\b\b\2\2;\20\3\2\2"+
		"\2<=\7j\2\2=>\7v\2\2>?\7v\2\2?@\7r\2\2@A\7t\2\2AB\7g\2\2BC\7s\2\2CD\7"+
		"w\2\2DE\7g\2\2EF\7u\2\2FG\7v\2\2G\22\3\2\2\2HI\7u\2\2IJ\7{\2\2JK\7u\2"+
		"\2KL\7q\2\2LM\7w\2\2MN\7v\2\2N\24\3\2\2\2OP\7u\2\2PQ\7g\2\2QR\7v\2\2R"+
		"S\7k\2\2ST\7p\2\2TU\7r\2\2UV\7w\2\2VW\7v\2\2W\26\3\2\2\2XZ\5!\21\2YX\3"+
		"\2\2\2Z[\3\2\2\2[Y\3\2\2\2[\\\3\2\2\2\\\30\3\2\2\2]^\7<\2\2^\32\3\2\2"+
		"\2_`\5\37\20\2`a\5\35\17\2ab\5\37\20\2b\34\3\2\2\2ce\n\2\2\2dc\3\2\2\2"+
		"ef\3\2\2\2fd\3\2\2\2fg\3\2\2\2g\36\3\2\2\2hi\7)\2\2i \3\2\2\2jk\t\3\2"+
		"\2k\"\3\2\2\2ln\t\4\2\2ml\3\2\2\2no\3\2\2\2om\3\2\2\2op\3\2\2\2pq\3\2"+
		"\2\2qr\b\22\3\2r$\3\2\2\2\7\2\67[fo";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}